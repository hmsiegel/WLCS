// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WLCS.Modules.Competitions.Infrastructure.Database;

#nullable disable

namespace WLCS.Modules.Competitions.Infrastructure.Database.Migrations
{
    [DbContext(typeof(CompetitionsDbContext))]
    [Migration("20240826185356_Create_Database")]
    partial class Create_Database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("competitions")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WLCS.Modules.Competitions.Domain.Competitions.Competition", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("AgeDivision")
                        .HasColumnType("integer")
                        .HasColumnName("age_division");

                    b.Property<int>("CompetitionType")
                        .HasColumnType("integer")
                        .HasColumnName("competition_type");

                    b.Property<Guid>("MeetId")
                        .HasColumnType("uuid")
                        .HasColumnName("meet_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.Property<int>("Scope")
                        .HasColumnType("integer")
                        .HasColumnName("scope");

                    b.HasKey("Id")
                        .HasName("pk_competitions");

                    b.HasIndex("MeetId")
                        .HasDatabaseName("ix_competitions_meet_id");

                    b.ToTable("competitions", "competitions");
                });

            modelBuilder.Entity("WLCS.Modules.Competitions.Domain.Meets.Meet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("venue");

                    b.HasKey("Id")
                        .HasName("pk_meets");

                    b.ToTable("meets", "competitions");
                });

            modelBuilder.Entity("WLCS.Modules.Competitions.Domain.Competitions.Competition", b =>
                {
                    b.HasOne("WLCS.Modules.Competitions.Domain.Meets.Meet", null)
                        .WithMany()
                        .HasForeignKey("MeetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_competitions_meets_meet_id");
                });

            modelBuilder.Entity("WLCS.Modules.Competitions.Domain.Meets.Meet", b =>
                {
                    b.OwnsOne("WLCS.Modules.Competitions.Domain.Meets.ValueObjects.Location", "Location", b1 =>
                        {
                            b1.Property<Guid>("MeetId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)")
                                .HasColumnName("city");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("character varying(2)")
                                .HasColumnName("state");

                            b1.HasKey("MeetId");

                            b1.ToTable("meets", "competitions");

                            b1.WithOwner()
                                .HasForeignKey("MeetId")
                                .HasConstraintName("fk_meets_meets_id");
                        });

                    b.Navigation("Location")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
